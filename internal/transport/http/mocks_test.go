// Code generated by mockigo. DO NOT EDIT.

//go:generate mockigo 

package http

import context "context"
import match "github.com/subtle-byte/mockigo/match"
import mock "github.com/subtle-byte/mockigo/mock"
import models "github.com/shackra/reviewer/internal/models"

var _ = match.Any[int]

type ServiceMock struct {
	mock *mock.Mock
}

func NewServiceMock(t mock.Testing) *ServiceMock {
	t.Helper()
	return &ServiceMock{mock: mock.NewMock(t)}
}

type _ServiceMock_Expecter struct {
	mock *mock.Mock
}

func (_mock *ServiceMock) EXPECT() _ServiceMock_Expecter {
	 return _ServiceMock_Expecter{mock: _mock.mock}
}

type _ServiceMock_AddReview_Call struct {
	*mock.Call
}

func (_mock *ServiceMock) AddReview(_a0 context.Context, _a1 string, _a2 string, _a3 string, _a4 float64) (error) {
	_mock.mock.T.Helper()
	_results := _mock.mock.Called("AddReview", _a0, _a1, _a2, _a3, _a4)
	_r0 := _results.Error(0)
	return _r0
}

func (_expecter _ServiceMock_Expecter) AddReview(_a0 match.Arg[context.Context], _a1 match.Arg[string], _a2 match.Arg[string], _a3 match.Arg[string], _a4 match.Arg[float64]) _ServiceMock_AddReview_Call {
	return _ServiceMock_AddReview_Call{Call: _expecter.mock.ExpectCall("AddReview", _a0.Matcher, _a1.Matcher, _a2.Matcher, _a3.Matcher, _a4.Matcher)}
}

func (_call _ServiceMock_AddReview_Call) Return(_r0 error) _ServiceMock_AddReview_Call {
	_call.Call.Return(_r0)
	return _call
}

func (_call _ServiceMock_AddReview_Call) RunReturn(f func(context.Context, string, string, string, float64) (error)) _ServiceMock_AddReview_Call {
	_call.Call.RunReturn(f)
	return _call
}

type _ServiceMock_ListProducts_Call struct {
	*mock.Call
}

func (_mock *ServiceMock) ListProducts(_a0 context.Context, _a1 int, _a2 int) (*models.Products, error) {
	_mock.mock.T.Helper()
	_results := _mock.mock.Called("ListProducts", _a0, _a1, _a2)
	var _r0 *models.Products
	if _got := _results.Get(0); _got != nil {
		_r0 = _got.(*models.Products)
	}
	_r1 := _results.Error(1)
	return _r0, _r1
}

func (_expecter _ServiceMock_Expecter) ListProducts(_a0 match.Arg[context.Context], _a1 match.Arg[int], _a2 match.Arg[int]) _ServiceMock_ListProducts_Call {
	return _ServiceMock_ListProducts_Call{Call: _expecter.mock.ExpectCall("ListProducts", _a0.Matcher, _a1.Matcher, _a2.Matcher)}
}

func (_call _ServiceMock_ListProducts_Call) Return(_r0 *models.Products, _r1 error) _ServiceMock_ListProducts_Call {
	_call.Call.Return(_r0, _r1)
	return _call
}

func (_call _ServiceMock_ListProducts_Call) RunReturn(f func(context.Context, int, int) (*models.Products, error)) _ServiceMock_ListProducts_Call {
	_call.Call.RunReturn(f)
	return _call
}
